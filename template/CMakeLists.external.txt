find_package(darabonba_core QUIET)

if(darabonba_core_FOUND)
  message(STATUS "Found darabonba_core version ${darabonba_core_VERSION}")
else()
  message(STATUS "darabonba_core could not be located, download darabonba_core instead.")
  function(download_file url filename)
    message(STATUS "Download ${url} to ${filename} ...")
    file(DOWNLOAD
            ${url}
            ${filename}
            TIMEOUT 50000
            STATUS ERR
            SHOW_PROGRESS )
    IF(ERR EQUAL 0)
      #如果下载无错误则设置压缩包名称标记下载成功
      MESSAGE(STATUS "Download darabonba_core success")
    ELSE()
      #下载错误输出相关的提示信息
      MESSAGE(STATUS "Download failed, error: ${ERR}")
      MESSAGE(FATAL_ERROR
              "using curl/wget or a similar tool"
              )
    ENDIF()
  endfunction()

  function(extract_file filename extract_dir)
    message(STATUS "Extract ${filename} to ${extract_dir} ...")
    # cmake -E tar -xf filename.tgz
    set(temp_dir ${CMAKE_BINARY_DIR}/tmp_for_extract.dir)
    if(EXISTS ${temp_dir})
      file(REMOVE_RECURSE ${temp_dir})
    endif()
    file(MAKE_DIRECTORY ${temp_dir})
    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf ${CMAKE_BINARY_DIR}/${filename}
            WORKING_DIRECTORY ${temp_dir})

    file(GLOB contents "${temp_dir}/*")
    list(LENGTH contents n)
    if(NOT n EQUAL 1 OR NOT IS_DIRECTORY "${contents}")
      set(contents "${temp_dir}")
    endif()

    get_filename_component(contents ${contents} ABSOLUTE)
    file(INSTALL "${contents}/" DESTINATION ${extract_dir})

    file(REMOVE_RECURSE ${temp_dir})
  endfunction()

  if(CMAKE_HOST_WIN32)
    download_file("http://alibabaclou-cpp-package.oss-cn-shanghai.aliyuncs.com/<% scope %>/<% name %>/<% version %>/win.zip" "<% name %>_<% version %>.zip")
  elseif(APPLE)
    download_file("http://alibabaclou-cpp-package.oss-cn-shanghai.aliyuncs.com/<% scope %>/<% name %>/<% version %>/mac.zip" "<% name %>_<% version %>.zip")
  else()
    download_file("http://alibabaclou-cpp-package.oss-cn-shanghai.aliyuncs.com/<% scope %>/<% name %>/<% version %>/linux.zip" "<% name %>_<% version %>.zip")
  endif()
  extract_file("<% name %>_<% version %>.zip" "${PROJECT_SOURCE_DIR}/deps")
  target_include_directories(${PROJECT_NAME} PRIVATE "${PROJECT_SOURCE_DIR}/deps/include")
endif()
